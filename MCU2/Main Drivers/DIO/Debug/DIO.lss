
DIO.elf:     file format elf32-avr

Sections:
Idx Name          Size      VMA       LMA       File off  Algn
  0 .text         000008d2  00000000  00000000  00000074  2**1
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .data         00000000  00800060  00800060  00000946  2**0
                  CONTENTS, ALLOC, LOAD, DATA
  2 .bss          00000012  00800060  00800060  00000946  2**0
                  ALLOC
  3 .comment      00000030  00000000  00000000  00000946  2**0
                  CONTENTS, READONLY
  4 .note.gnu.avr.deviceinfo 0000003c  00000000  00000000  00000978  2**2
                  CONTENTS, READONLY
  5 .debug_aranges 00000240  00000000  00000000  000009b4  2**0
                  CONTENTS, READONLY, DEBUGGING
  6 .debug_info   00001c0e  00000000  00000000  00000bf4  2**0
                  CONTENTS, READONLY, DEBUGGING
  7 .debug_abbrev 00000d83  00000000  00000000  00002802  2**0
                  CONTENTS, READONLY, DEBUGGING
  8 .debug_line   00001162  00000000  00000000  00003585  2**0
                  CONTENTS, READONLY, DEBUGGING
  9 .debug_frame  00000460  00000000  00000000  000046e8  2**2
                  CONTENTS, READONLY, DEBUGGING
 10 .debug_str    000009c6  00000000  00000000  00004b48  2**0
                  CONTENTS, READONLY, DEBUGGING
 11 .debug_loc    00000c66  00000000  00000000  0000550e  2**0
                  CONTENTS, READONLY, DEBUGGING
 12 .debug_ranges 00000230  00000000  00000000  00006174  2**0
                  CONTENTS, READONLY, DEBUGGING

Disassembly of section .text:

00000000 <__vectors>:
   0:	0c 94 2a 00 	jmp	0x54	; 0x54 <__ctors_end>
   4:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   8:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
   c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  10:	0c 94 6f 00 	jmp	0xde	; 0xde <__vector_4>
  14:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  18:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  1c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  20:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  24:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  28:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  2c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  30:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  34:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  38:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  3c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  40:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  44:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  48:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  4c:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>
  50:	0c 94 47 00 	jmp	0x8e	; 0x8e <__bad_interrupt>

00000054 <__ctors_end>:
  54:	11 24       	eor	r1, r1
  56:	1f be       	out	0x3f, r1	; 63
  58:	cf e5       	ldi	r28, 0x5F	; 95
  5a:	d8 e0       	ldi	r29, 0x08	; 8
  5c:	de bf       	out	0x3e, r29	; 62
  5e:	cd bf       	out	0x3d, r28	; 61

00000060 <__do_copy_data>:
  60:	10 e0       	ldi	r17, 0x00	; 0
  62:	a0 e6       	ldi	r26, 0x60	; 96
  64:	b0 e0       	ldi	r27, 0x00	; 0
  66:	e2 ed       	ldi	r30, 0xD2	; 210
  68:	f8 e0       	ldi	r31, 0x08	; 8
  6a:	02 c0       	rjmp	.+4      	; 0x70 <__do_copy_data+0x10>
  6c:	05 90       	lpm	r0, Z+
  6e:	0d 92       	st	X+, r0
  70:	a0 36       	cpi	r26, 0x60	; 96
  72:	b1 07       	cpc	r27, r17
  74:	d9 f7       	brne	.-10     	; 0x6c <__do_copy_data+0xc>

00000076 <__do_clear_bss>:
  76:	20 e0       	ldi	r18, 0x00	; 0
  78:	a0 e6       	ldi	r26, 0x60	; 96
  7a:	b0 e0       	ldi	r27, 0x00	; 0
  7c:	01 c0       	rjmp	.+2      	; 0x80 <.do_clear_bss_start>

0000007e <.do_clear_bss_loop>:
  7e:	1d 92       	st	X+, r1

00000080 <.do_clear_bss_start>:
  80:	a2 37       	cpi	r26, 0x72	; 114
  82:	b2 07       	cpc	r27, r18
  84:	e1 f7       	brne	.-8      	; 0x7e <.do_clear_bss_loop>
  86:	0e 94 49 00 	call	0x92	; 0x92 <main>
  8a:	0c 94 67 04 	jmp	0x8ce	; 0x8ce <_exit>

0000008e <__bad_interrupt>:
  8e:	0c 94 00 00 	jmp	0	; 0x0 <__vectors>

00000092 <main>:
  92:	0e 94 69 03 	call	0x6d2	; 0x6d2 <Timer2_vInit>
  96:	0e 94 7f 03 	call	0x6fe	; 0x6fe <Timer2_vStart>
  9a:	68 ee       	ldi	r22, 0xE8	; 232
  9c:	73 e0       	ldi	r23, 0x03	; 3
  9e:	80 e0       	ldi	r24, 0x00	; 0
  a0:	90 e0       	ldi	r25, 0x00	; 0
  a2:	0e 94 92 03 	call	0x724	; 0x724 <Timer2_vSetTime>
  a6:	81 e0       	ldi	r24, 0x01	; 1
  a8:	0e 94 70 03 	call	0x6e0	; 0x6e0 <Timer2_vEnableInt>
  ac:	60 e8       	ldi	r22, 0x80	; 128
  ae:	75 e2       	ldi	r23, 0x25	; 37
  b0:	80 e0       	ldi	r24, 0x00	; 0
  b2:	90 e0       	ldi	r25, 0x00	; 0
  b4:	0e 94 dc 03 	call	0x7b8	; 0x7b8 <UART_init>
  b8:	0e 94 d8 00 	call	0x1b0	; 0x1b0 <MILESTONE_voidBuzzerIniti>
  bc:	0e 94 fb 00 	call	0x1f6	; 0x1f6 <MILESTONE_voidMotorIniti>
  c0:	0e 94 0c 02 	call	0x418	; 0x418 <MILESTONE_voidPasswordSetup>
  c4:	0e 94 ff 03 	call	0x7fe	; 0x7fe <UART_receiveByte>
  c8:	8b 32       	cpi	r24, 0x2B	; 43
  ca:	19 f0       	breq	.+6      	; 0xd2 <main+0x40>
  cc:	8d 32       	cpi	r24, 0x2D	; 45
  ce:	21 f0       	breq	.+8      	; 0xd8 <main+0x46>
  d0:	f9 cf       	rjmp	.-14     	; 0xc4 <main+0x32>
  d2:	0e 94 13 01 	call	0x226	; 0x226 <MILESTONE_voidOpenDoor>
  d6:	f6 cf       	rjmp	.-20     	; 0xc4 <main+0x32>
  d8:	0e 94 4c 02 	call	0x498	; 0x498 <MILESTONE_voidChangPassword>
  dc:	f3 cf       	rjmp	.-26     	; 0xc4 <main+0x32>

000000de <__vector_4>:
  de:	1f 92       	push	r1
  e0:	0f 92       	push	r0
  e2:	0f b6       	in	r0, 0x3f	; 63
  e4:	0f 92       	push	r0
  e6:	11 24       	eor	r1, r1
  e8:	4f 93       	push	r20
  ea:	5f 93       	push	r21
  ec:	6f 93       	push	r22
  ee:	7f 93       	push	r23
  f0:	8f 93       	push	r24
  f2:	9f 93       	push	r25
  f4:	af 93       	push	r26
  f6:	bf 93       	push	r27
  f8:	80 91 60 00 	lds	r24, 0x0060	; 0x800060 <__DATA_REGION_ORIGIN__>
  fc:	90 91 61 00 	lds	r25, 0x0061	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 100:	a0 91 62 00 	lds	r26, 0x0062	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 104:	b0 91 63 00 	lds	r27, 0x0063	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 108:	ac 01       	movw	r20, r24
 10a:	bd 01       	movw	r22, r26
 10c:	4f 5f       	subi	r20, 0xFF	; 255
 10e:	5f 4f       	sbci	r21, 0xFF	; 255
 110:	6f 4f       	sbci	r22, 0xFF	; 255
 112:	7f 4f       	sbci	r23, 0xFF	; 255
 114:	40 93 60 00 	sts	0x0060, r20	; 0x800060 <__DATA_REGION_ORIGIN__>
 118:	50 93 61 00 	sts	0x0061, r21	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 11c:	60 93 62 00 	sts	0x0062, r22	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 120:	70 93 63 00 	sts	0x0063, r23	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 124:	40 91 69 00 	lds	r20, 0x0069	; 0x800069 <Timer2_NumOfCM>
 128:	50 91 6a 00 	lds	r21, 0x006A	; 0x80006a <Timer2_NumOfCM+0x1>
 12c:	60 91 6b 00 	lds	r22, 0x006B	; 0x80006b <Timer2_NumOfCM+0x2>
 130:	70 91 6c 00 	lds	r23, 0x006C	; 0x80006c <Timer2_NumOfCM+0x3>
 134:	84 17       	cp	r24, r20
 136:	95 07       	cpc	r25, r21
 138:	a6 07       	cpc	r26, r22
 13a:	b7 07       	cpc	r27, r23
 13c:	01 f5       	brne	.+64     	; 0x17e <__vector_4+0xa0>
 13e:	10 92 60 00 	sts	0x0060, r1	; 0x800060 <__DATA_REGION_ORIGIN__>
 142:	10 92 61 00 	sts	0x0061, r1	; 0x800061 <__DATA_REGION_ORIGIN__+0x1>
 146:	10 92 62 00 	sts	0x0062, r1	; 0x800062 <__DATA_REGION_ORIGIN__+0x2>
 14a:	10 92 63 00 	sts	0x0063, r1	; 0x800063 <__DATA_REGION_ORIGIN__+0x3>
 14e:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <count_motor>
 152:	90 91 66 00 	lds	r25, 0x0066	; 0x800066 <count_motor+0x1>
 156:	a0 91 67 00 	lds	r26, 0x0067	; 0x800067 <count_motor+0x2>
 15a:	b0 91 68 00 	lds	r27, 0x0068	; 0x800068 <count_motor+0x3>
 15e:	01 96       	adiw	r24, 0x01	; 1
 160:	a1 1d       	adc	r26, r1
 162:	b1 1d       	adc	r27, r1
 164:	80 93 65 00 	sts	0x0065, r24	; 0x800065 <count_motor>
 168:	90 93 66 00 	sts	0x0066, r25	; 0x800066 <count_motor+0x1>
 16c:	a0 93 67 00 	sts	0x0067, r26	; 0x800067 <count_motor+0x2>
 170:	b0 93 68 00 	sts	0x0068, r27	; 0x800068 <count_motor+0x3>
 174:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <count_buzzer>
 178:	8f 5f       	subi	r24, 0xFF	; 255
 17a:	80 93 64 00 	sts	0x0064, r24	; 0x800064 <count_buzzer>
 17e:	bf 91       	pop	r27
 180:	af 91       	pop	r26
 182:	9f 91       	pop	r25
 184:	8f 91       	pop	r24
 186:	7f 91       	pop	r23
 188:	6f 91       	pop	r22
 18a:	5f 91       	pop	r21
 18c:	4f 91       	pop	r20
 18e:	0f 90       	pop	r0
 190:	0f be       	out	0x3f, r0	; 63
 192:	0f 90       	pop	r0
 194:	1f 90       	pop	r1
 196:	18 95       	reti

00000198 <OUTPUT_Initi>:
 198:	41 e0       	ldi	r20, 0x01	; 1
 19a:	0e 94 54 02 	call	0x4a8	; 0x4a8 <DIO_voidSetPinDirection>
 19e:	08 95       	ret

000001a0 <OUTPUT_Set>:
 1a0:	41 e0       	ldi	r20, 0x01	; 1
 1a2:	0e 94 c2 02 	call	0x584	; 0x584 <DIO_voidSetPinValue>
 1a6:	08 95       	ret

000001a8 <OUTPUT_Reset>:
 1a8:	40 e0       	ldi	r20, 0x00	; 0
 1aa:	0e 94 c2 02 	call	0x584	; 0x584 <DIO_voidSetPinValue>
 1ae:	08 95       	ret

000001b0 <MILESTONE_voidBuzzerIniti>:

#include "buzzer.h"
volatile u8 count_buzzer=0;
void MILESTONE_voidBuzzerIniti()
{
	OUTPUT_Initi(PORTB_ID,PIN5_ID);
 1b0:	65 e0       	ldi	r22, 0x05	; 5
 1b2:	81 e0       	ldi	r24, 0x01	; 1
 1b4:	0e 94 cc 00 	call	0x198	; 0x198 <OUTPUT_Initi>
 1b8:	08 95       	ret

000001ba <MILESTONE_voidBuzzer>:
}

void MILESTONE_voidBuzzer()
{
	count_buzzer=0;
 1ba:	10 92 64 00 	sts	0x0064, r1	; 0x800064 <count_buzzer>
	OUTPUT_Set(PORTB_ID,PIN5_ID);
 1be:	65 e0       	ldi	r22, 0x05	; 5
 1c0:	81 e0       	ldi	r24, 0x01	; 1
 1c2:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <OUTPUT_Set>
	while(1)
	{ 
		   if (count_buzzer<9)
 1c6:	80 91 64 00 	lds	r24, 0x0064	; 0x800064 <count_buzzer>
 1ca:	89 30       	cpi	r24, 0x09	; 9
 1cc:	58 f4       	brcc	.+22     	; 0x1e4 <MILESTONE_voidBuzzer+0x2a>
		   {
			   UART_sendByte(57-count_buzzer);
 1ce:	90 91 64 00 	lds	r25, 0x0064	; 0x800064 <count_buzzer>
 1d2:	29 e3       	ldi	r18, 0x39	; 57
 1d4:	30 e0       	ldi	r19, 0x00	; 0
 1d6:	a9 01       	movw	r20, r18
 1d8:	49 1b       	sub	r20, r25
 1da:	51 09       	sbc	r21, r1
 1dc:	ca 01       	movw	r24, r20
 1de:	0e 94 f2 03 	call	0x7e4	; 0x7e4 <UART_sendByte>
		   {
			   UART_sendByte('C');
			   OUTPUT_Reset(PORTB_ID,PIN5_ID);
			   break;
		   }
    }
 1e2:	f1 cf       	rjmp	.-30     	; 0x1c6 <MILESTONE_voidBuzzer+0xc>
		   {
			   UART_sendByte(57-count_buzzer);
		   }
		   else
		   {
			   UART_sendByte('C');
 1e4:	83 e4       	ldi	r24, 0x43	; 67
 1e6:	90 e0       	ldi	r25, 0x00	; 0
 1e8:	0e 94 f2 03 	call	0x7e4	; 0x7e4 <UART_sendByte>
			   OUTPUT_Reset(PORTB_ID,PIN5_ID);
 1ec:	65 e0       	ldi	r22, 0x05	; 5
 1ee:	81 e0       	ldi	r24, 0x01	; 1
 1f0:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <OUTPUT_Reset>
 1f4:	08 95       	ret

000001f6 <MILESTONE_voidMotorIniti>:
 */ 
#include "Motor.h"
volatile u32 count_motor=0;
void MILESTONE_voidMotorIniti()
{
	OUTPUT_Initi(PORTB_ID,PIN0_ID);
 1f6:	60 e0       	ldi	r22, 0x00	; 0
 1f8:	81 e0       	ldi	r24, 0x01	; 1
 1fa:	0e 94 cc 00 	call	0x198	; 0x198 <OUTPUT_Initi>
	OUTPUT_Initi(PORTB_ID,PIN1_ID);
 1fe:	61 e0       	ldi	r22, 0x01	; 1
 200:	81 e0       	ldi	r24, 0x01	; 1
 202:	0e 94 cc 00 	call	0x198	; 0x198 <OUTPUT_Initi>
	OUTPUT_Initi(PORTB_ID,PIN2_ID);
 206:	62 e0       	ldi	r22, 0x02	; 2
 208:	81 e0       	ldi	r24, 0x01	; 1
 20a:	0e 94 cc 00 	call	0x198	; 0x198 <OUTPUT_Initi>
	Timer0_vInit();
 20e:	0e 94 30 03 	call	0x660	; 0x660 <Timer0_vInit>
	Timer0_vStart();
 212:	0e 94 37 03 	call	0x66e	; 0x66e <Timer0_vStart>
	Timer0_SetFastPWM(0);
 216:	80 e0       	ldi	r24, 0x00	; 0
 218:	0e 94 4a 03 	call	0x694	; 0x694 <Timer0_SetFastPWM>
	OUTPUT_Initi(PORTB_ID,PIN4_ID);
 21c:	64 e0       	ldi	r22, 0x04	; 4
 21e:	81 e0       	ldi	r24, 0x01	; 1
 220:	0e 94 cc 00 	call	0x198	; 0x198 <OUTPUT_Initi>
 224:	08 95       	ret

00000226 <MILESTONE_voidOpenDoor>:
}


void MILESTONE_voidOpenDoor()
{
	MILESTONE_u8PasswordCheck(password , TakeAction);
 226:	61 e0       	ldi	r22, 0x01	; 1
 228:	8d e6       	ldi	r24, 0x6D	; 109
 22a:	90 e0       	ldi	r25, 0x00	; 0
 22c:	0e 94 b9 01 	call	0x372	; 0x372 <MILESTONE_u8PasswordCheck>
	count_motor=0;
 230:	10 92 65 00 	sts	0x0065, r1	; 0x800065 <count_motor>
 234:	10 92 66 00 	sts	0x0066, r1	; 0x800066 <count_motor+0x1>
 238:	10 92 67 00 	sts	0x0067, r1	; 0x800067 <count_motor+0x2>
 23c:	10 92 68 00 	sts	0x0068, r1	; 0x800068 <count_motor+0x3>
	 while(1)
	 {
		 UART_sendByte(count_motor);
 240:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <count_motor>
 244:	90 91 66 00 	lds	r25, 0x0066	; 0x800066 <count_motor+0x1>
 248:	a0 91 67 00 	lds	r26, 0x0067	; 0x800067 <count_motor+0x2>
 24c:	b0 91 68 00 	lds	r27, 0x0068	; 0x800068 <count_motor+0x3>
 250:	0e 94 f2 03 	call	0x7e4	; 0x7e4 <UART_sendByte>
		 
		if (count_motor<=15)
 254:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <count_motor>
 258:	90 91 66 00 	lds	r25, 0x0066	; 0x800066 <count_motor+0x1>
 25c:	a0 91 67 00 	lds	r26, 0x0067	; 0x800067 <count_motor+0x2>
 260:	b0 91 68 00 	lds	r27, 0x0068	; 0x800068 <count_motor+0x3>
 264:	40 97       	sbiw	r24, 0x10	; 16
 266:	a1 05       	cpc	r26, r1
 268:	b1 05       	cpc	r27, r1
 26a:	a0 f4       	brcc	.+40     	; 0x294 <MILESTONE_voidOpenDoor+0x6e>
		{
			OUTPUT_Set(PORTB_ID,PIN0_ID);
 26c:	60 e0       	ldi	r22, 0x00	; 0
 26e:	81 e0       	ldi	r24, 0x01	; 1
 270:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <OUTPUT_Set>
			OUTPUT_Reset(PORTB_ID,PIN1_ID);
 274:	61 e0       	ldi	r22, 0x01	; 1
 276:	81 e0       	ldi	r24, 0x01	; 1
 278:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <OUTPUT_Reset>
			OUTPUT_Reset(PORTB_ID,PIN2_ID);
 27c:	62 e0       	ldi	r22, 0x02	; 2
 27e:	81 e0       	ldi	r24, 0x01	; 1
 280:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <OUTPUT_Reset>
			
			Timer0_SetFastPWM(100);
 284:	84 e6       	ldi	r24, 0x64	; 100
 286:	0e 94 4a 03 	call	0x694	; 0x694 <Timer0_SetFastPWM>
			OUTPUT_Reset(PORTB_ID,PIN4_ID);
 28a:	64 e0       	ldi	r22, 0x04	; 4
 28c:	81 e0       	ldi	r24, 0x01	; 1
 28e:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <OUTPUT_Reset>
 292:	d6 cf       	rjmp	.-84     	; 0x240 <MILESTONE_voidOpenDoor+0x1a>
			
		}
		else if(count_motor>15 && count_motor<=18)
 294:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <count_motor>
 298:	90 91 66 00 	lds	r25, 0x0066	; 0x800066 <count_motor+0x1>
 29c:	a0 91 67 00 	lds	r26, 0x0067	; 0x800067 <count_motor+0x2>
 2a0:	b0 91 68 00 	lds	r27, 0x0068	; 0x800068 <count_motor+0x3>
 2a4:	40 97       	sbiw	r24, 0x10	; 16
 2a6:	a1 05       	cpc	r26, r1
 2a8:	b1 05       	cpc	r27, r1
 2aa:	00 f1       	brcs	.+64     	; 0x2ec <MILESTONE_voidOpenDoor+0xc6>
 2ac:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <count_motor>
 2b0:	90 91 66 00 	lds	r25, 0x0066	; 0x800066 <count_motor+0x1>
 2b4:	a0 91 67 00 	lds	r26, 0x0067	; 0x800067 <count_motor+0x2>
 2b8:	b0 91 68 00 	lds	r27, 0x0068	; 0x800068 <count_motor+0x3>
 2bc:	43 97       	sbiw	r24, 0x13	; 19
 2be:	a1 05       	cpc	r26, r1
 2c0:	b1 05       	cpc	r27, r1
 2c2:	a0 f4       	brcc	.+40     	; 0x2ec <MILESTONE_voidOpenDoor+0xc6>
		{
            OUTPUT_Reset(PORTB_ID,PIN0_ID);
 2c4:	60 e0       	ldi	r22, 0x00	; 0
 2c6:	81 e0       	ldi	r24, 0x01	; 1
 2c8:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <OUTPUT_Reset>
            OUTPUT_Set(PORTB_ID,PIN1_ID);
 2cc:	61 e0       	ldi	r22, 0x01	; 1
 2ce:	81 e0       	ldi	r24, 0x01	; 1
 2d0:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <OUTPUT_Set>
            OUTPUT_Reset(PORTB_ID,PIN2_ID);
 2d4:	62 e0       	ldi	r22, 0x02	; 2
 2d6:	81 e0       	ldi	r24, 0x01	; 1
 2d8:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <OUTPUT_Reset>
			
			Timer0_SetFastPWM(0);
 2dc:	80 e0       	ldi	r24, 0x00	; 0
 2de:	0e 94 4a 03 	call	0x694	; 0x694 <Timer0_SetFastPWM>
			OUTPUT_Reset(PORTB_ID,PIN4_ID);
 2e2:	64 e0       	ldi	r22, 0x04	; 4
 2e4:	81 e0       	ldi	r24, 0x01	; 1
 2e6:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <OUTPUT_Reset>
 2ea:	aa cf       	rjmp	.-172    	; 0x240 <MILESTONE_voidOpenDoor+0x1a>
		}
		else if(count_motor>18 && count_motor<=33)
 2ec:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <count_motor>
 2f0:	90 91 66 00 	lds	r25, 0x0066	; 0x800066 <count_motor+0x1>
 2f4:	a0 91 67 00 	lds	r26, 0x0067	; 0x800067 <count_motor+0x2>
 2f8:	b0 91 68 00 	lds	r27, 0x0068	; 0x800068 <count_motor+0x3>
 2fc:	43 97       	sbiw	r24, 0x13	; 19
 2fe:	a1 05       	cpc	r26, r1
 300:	b1 05       	cpc	r27, r1
 302:	00 f1       	brcs	.+64     	; 0x344 <MILESTONE_voidOpenDoor+0x11e>
 304:	80 91 65 00 	lds	r24, 0x0065	; 0x800065 <count_motor>
 308:	90 91 66 00 	lds	r25, 0x0066	; 0x800066 <count_motor+0x1>
 30c:	a0 91 67 00 	lds	r26, 0x0067	; 0x800067 <count_motor+0x2>
 310:	b0 91 68 00 	lds	r27, 0x0068	; 0x800068 <count_motor+0x3>
 314:	82 97       	sbiw	r24, 0x22	; 34
 316:	a1 05       	cpc	r26, r1
 318:	b1 05       	cpc	r27, r1
 31a:	a0 f4       	brcc	.+40     	; 0x344 <MILESTONE_voidOpenDoor+0x11e>
		{
			OUTPUT_Reset(PORTB_ID,PIN0_ID);
 31c:	60 e0       	ldi	r22, 0x00	; 0
 31e:	81 e0       	ldi	r24, 0x01	; 1
 320:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <OUTPUT_Reset>
			OUTPUT_Reset(PORTB_ID,PIN1_ID);
 324:	61 e0       	ldi	r22, 0x01	; 1
 326:	81 e0       	ldi	r24, 0x01	; 1
 328:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <OUTPUT_Reset>
			OUTPUT_Set(PORTB_ID,PIN2_ID);
 32c:	62 e0       	ldi	r22, 0x02	; 2
 32e:	81 e0       	ldi	r24, 0x01	; 1
 330:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <OUTPUT_Set>
			
			Timer0_SetFastPWM(75);
 334:	8b e4       	ldi	r24, 0x4B	; 75
 336:	0e 94 4a 03 	call	0x694	; 0x694 <Timer0_SetFastPWM>
			OUTPUT_Set(PORTB_ID,PIN4_ID);
 33a:	64 e0       	ldi	r22, 0x04	; 4
 33c:	81 e0       	ldi	r24, 0x01	; 1
 33e:	0e 94 d0 00 	call	0x1a0	; 0x1a0 <OUTPUT_Set>
 342:	7e cf       	rjmp	.-260    	; 0x240 <MILESTONE_voidOpenDoor+0x1a>
		}
		else
		{
			OUTPUT_Reset(PORTB_ID,PIN0_ID);
 344:	60 e0       	ldi	r22, 0x00	; 0
 346:	81 e0       	ldi	r24, 0x01	; 1
 348:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <OUTPUT_Reset>
			OUTPUT_Reset(PORTB_ID,PIN1_ID);
 34c:	61 e0       	ldi	r22, 0x01	; 1
 34e:	81 e0       	ldi	r24, 0x01	; 1
 350:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <OUTPUT_Reset>
			OUTPUT_Reset(PORTB_ID,PIN2_ID);
 354:	62 e0       	ldi	r22, 0x02	; 2
 356:	81 e0       	ldi	r24, 0x01	; 1
 358:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <OUTPUT_Reset>
			Timer0_SetFastPWM(0);
 35c:	80 e0       	ldi	r24, 0x00	; 0
 35e:	0e 94 4a 03 	call	0x694	; 0x694 <Timer0_SetFastPWM>
			OUTPUT_Reset(PORTB_ID,PIN4_ID);
 362:	64 e0       	ldi	r22, 0x04	; 4
 364:	81 e0       	ldi	r24, 0x01	; 1
 366:	0e 94 d4 00 	call	0x1a8	; 0x1a8 <OUTPUT_Reset>
			UART_sendByte('D');
 36a:	84 e4       	ldi	r24, 0x44	; 68
 36c:	0e 94 f2 03 	call	0x7e4	; 0x7e4 <UART_sendByte>
 370:	08 95       	ret

00000372 <MILESTONE_u8PasswordCheck>:
 372:	ef 92       	push	r14
 374:	ff 92       	push	r15
 376:	0f 93       	push	r16
 378:	1f 93       	push	r17
 37a:	cf 93       	push	r28
 37c:	df 93       	push	r29
 37e:	00 d0       	rcall	.+0      	; 0x380 <MILESTONE_u8PasswordCheck+0xe>
 380:	00 d0       	rcall	.+0      	; 0x382 <MILESTONE_u8PasswordCheck+0x10>
 382:	1f 92       	push	r1
 384:	cd b7       	in	r28, 0x3d	; 61
 386:	de b7       	in	r29, 0x3e	; 62
 388:	7c 01       	movw	r14, r24
 38a:	03 e0       	ldi	r16, 0x03	; 3
 38c:	30 c0       	rjmp	.+96     	; 0x3ee <MILESTONE_u8PasswordCheck+0x7c>
 38e:	10 e0       	ldi	r17, 0x00	; 0
 390:	0e 94 ff 03 	call	0x7fe	; 0x7fe <UART_receiveByte>
 394:	88 23       	and	r24, r24
 396:	e1 f3       	breq	.-8      	; 0x390 <MILESTONE_u8PasswordCheck+0x1e>
 398:	8d 30       	cpi	r24, 0x0D	; 13
 39a:	51 f0       	breq	.+20     	; 0x3b0 <MILESTONE_u8PasswordCheck+0x3e>
 39c:	15 30       	cpi	r17, 0x05	; 5
 39e:	40 f4       	brcc	.+16     	; 0x3b0 <MILESTONE_u8PasswordCheck+0x3e>
 3a0:	e1 e0       	ldi	r30, 0x01	; 1
 3a2:	f0 e0       	ldi	r31, 0x00	; 0
 3a4:	ec 0f       	add	r30, r28
 3a6:	fd 1f       	adc	r31, r29
 3a8:	e1 0f       	add	r30, r17
 3aa:	f1 1d       	adc	r31, r1
 3ac:	80 83       	st	Z, r24
 3ae:	1f 5f       	subi	r17, 0xFF	; 255
 3b0:	8d 30       	cpi	r24, 0x0D	; 13
 3b2:	71 f7       	brne	.-36     	; 0x390 <MILESTONE_u8PasswordCheck+0x1e>
 3b4:	15 30       	cpi	r17, 0x05	; 5
 3b6:	61 f7       	brne	.-40     	; 0x390 <MILESTONE_u8PasswordCheck+0x1e>
 3b8:	11 c0       	rjmp	.+34     	; 0x3dc <MILESTONE_u8PasswordCheck+0x6a>
 3ba:	82 2f       	mov	r24, r18
 3bc:	90 e0       	ldi	r25, 0x00	; 0
 3be:	f7 01       	movw	r30, r14
 3c0:	e8 0f       	add	r30, r24
 3c2:	f9 1f       	adc	r31, r25
 3c4:	30 81       	ld	r19, Z
 3c6:	e1 e0       	ldi	r30, 0x01	; 1
 3c8:	f0 e0       	ldi	r31, 0x00	; 0
 3ca:	ec 0f       	add	r30, r28
 3cc:	fd 1f       	adc	r31, r29
 3ce:	e8 0f       	add	r30, r24
 3d0:	f9 1f       	adc	r31, r25
 3d2:	80 81       	ld	r24, Z
 3d4:	38 13       	cpse	r19, r24
 3d6:	05 c0       	rjmp	.+10     	; 0x3e2 <MILESTONE_u8PasswordCheck+0x70>
 3d8:	2f 5f       	subi	r18, 0xFF	; 255
 3da:	01 c0       	rjmp	.+2      	; 0x3de <MILESTONE_u8PasswordCheck+0x6c>
 3dc:	20 e0       	ldi	r18, 0x00	; 0
 3de:	21 17       	cp	r18, r17
 3e0:	60 f3       	brcs	.-40     	; 0x3ba <MILESTONE_u8PasswordCheck+0x48>
 3e2:	12 17       	cp	r17, r18
 3e4:	49 f0       	breq	.+18     	; 0x3f8 <MILESTONE_u8PasswordCheck+0x86>
 3e6:	82 e4       	ldi	r24, 0x42	; 66
 3e8:	0e 94 f2 03 	call	0x7e4	; 0x7e4 <UART_sendByte>
 3ec:	01 50       	subi	r16, 0x01	; 1
 3ee:	01 11       	cpse	r16, r1
 3f0:	ce cf       	rjmp	.-100    	; 0x38e <MILESTONE_u8PasswordCheck+0x1c>
 3f2:	0e 94 dd 00 	call	0x1ba	; 0x1ba <MILESTONE_voidBuzzer>
 3f6:	c9 cf       	rjmp	.-110    	; 0x38a <MILESTONE_u8PasswordCheck+0x18>
 3f8:	81 e4       	ldi	r24, 0x41	; 65
 3fa:	0e 94 f2 03 	call	0x7e4	; 0x7e4 <UART_sendByte>
 3fe:	81 e0       	ldi	r24, 0x01	; 1
 400:	0f 90       	pop	r0
 402:	0f 90       	pop	r0
 404:	0f 90       	pop	r0
 406:	0f 90       	pop	r0
 408:	0f 90       	pop	r0
 40a:	df 91       	pop	r29
 40c:	cf 91       	pop	r28
 40e:	1f 91       	pop	r17
 410:	0f 91       	pop	r16
 412:	ff 90       	pop	r15
 414:	ef 90       	pop	r14
 416:	08 95       	ret

00000418 <MILESTONE_voidPasswordSetup>:
 418:	1f 93       	push	r17
 41a:	cf 93       	push	r28
 41c:	df 93       	push	r29
 41e:	00 d0       	rcall	.+0      	; 0x420 <MILESTONE_voidPasswordSetup+0x8>
 420:	00 d0       	rcall	.+0      	; 0x422 <MILESTONE_voidPasswordSetup+0xa>
 422:	1f 92       	push	r1
 424:	cd b7       	in	r28, 0x3d	; 61
 426:	de b7       	in	r29, 0x3e	; 62
 428:	10 e0       	ldi	r17, 0x00	; 0
 42a:	0e 94 ff 03 	call	0x7fe	; 0x7fe <UART_receiveByte>
 42e:	88 23       	and	r24, r24
 430:	e1 f3       	breq	.-8      	; 0x42a <MILESTONE_voidPasswordSetup+0x12>
 432:	8d 30       	cpi	r24, 0x0D	; 13
 434:	51 f0       	breq	.+20     	; 0x44a <MILESTONE_voidPasswordSetup+0x32>
 436:	15 30       	cpi	r17, 0x05	; 5
 438:	40 f4       	brcc	.+16     	; 0x44a <MILESTONE_voidPasswordSetup+0x32>
 43a:	e1 e0       	ldi	r30, 0x01	; 1
 43c:	f0 e0       	ldi	r31, 0x00	; 0
 43e:	ec 0f       	add	r30, r28
 440:	fd 1f       	adc	r31, r29
 442:	e1 0f       	add	r30, r17
 444:	f1 1d       	adc	r31, r1
 446:	80 83       	st	Z, r24
 448:	1f 5f       	subi	r17, 0xFF	; 255
 44a:	8d 30       	cpi	r24, 0x0D	; 13
 44c:	71 f7       	brne	.-36     	; 0x42a <MILESTONE_voidPasswordSetup+0x12>
 44e:	15 30       	cpi	r17, 0x05	; 5
 450:	61 f7       	brne	.-40     	; 0x42a <MILESTONE_voidPasswordSetup+0x12>
 452:	60 e0       	ldi	r22, 0x00	; 0
 454:	ce 01       	movw	r24, r28
 456:	01 96       	adiw	r24, 0x01	; 1
 458:	0e 94 b9 01 	call	0x372	; 0x372 <MILESTONE_u8PasswordCheck>
 45c:	88 23       	and	r24, r24
 45e:	29 f3       	breq	.-54     	; 0x42a <MILESTONE_voidPasswordSetup+0x12>
 460:	0f c0       	rjmp	.+30     	; 0x480 <MILESTONE_voidPasswordSetup+0x68>
 462:	82 2f       	mov	r24, r18
 464:	90 e0       	ldi	r25, 0x00	; 0
 466:	e1 e0       	ldi	r30, 0x01	; 1
 468:	f0 e0       	ldi	r31, 0x00	; 0
 46a:	ec 0f       	add	r30, r28
 46c:	fd 1f       	adc	r31, r29
 46e:	e8 0f       	add	r30, r24
 470:	f9 1f       	adc	r31, r25
 472:	30 81       	ld	r19, Z
 474:	fc 01       	movw	r30, r24
 476:	e3 59       	subi	r30, 0x93	; 147
 478:	ff 4f       	sbci	r31, 0xFF	; 255
 47a:	30 83       	st	Z, r19
 47c:	2f 5f       	subi	r18, 0xFF	; 255
 47e:	01 c0       	rjmp	.+2      	; 0x482 <MILESTONE_voidPasswordSetup+0x6a>
 480:	20 e0       	ldi	r18, 0x00	; 0
 482:	21 17       	cp	r18, r17
 484:	70 f3       	brcs	.-36     	; 0x462 <MILESTONE_voidPasswordSetup+0x4a>
 486:	0f 90       	pop	r0
 488:	0f 90       	pop	r0
 48a:	0f 90       	pop	r0
 48c:	0f 90       	pop	r0
 48e:	0f 90       	pop	r0
 490:	df 91       	pop	r29
 492:	cf 91       	pop	r28
 494:	1f 91       	pop	r17
 496:	08 95       	ret

00000498 <MILESTONE_voidChangPassword>:
 498:	61 e0       	ldi	r22, 0x01	; 1
 49a:	8d e6       	ldi	r24, 0x6D	; 109
 49c:	90 e0       	ldi	r25, 0x00	; 0
 49e:	0e 94 b9 01 	call	0x372	; 0x372 <MILESTONE_u8PasswordCheck>
 4a2:	0e 94 0c 02 	call	0x418	; 0x418 <MILESTONE_voidPasswordSetup>
 4a6:	08 95       	ret

000004a8 <DIO_voidSetPinDirection>:
 4a8:	41 11       	cpse	r20, r1
 4aa:	38 c0       	rjmp	.+112    	; 0x51c <DIO_voidSetPinDirection+0x74>
 4ac:	81 30       	cpi	r24, 0x01	; 1
 4ae:	91 f0       	breq	.+36     	; 0x4d4 <DIO_voidSetPinDirection+0x2c>
 4b0:	28 f0       	brcs	.+10     	; 0x4bc <DIO_voidSetPinDirection+0x14>
 4b2:	82 30       	cpi	r24, 0x02	; 2
 4b4:	d9 f0       	breq	.+54     	; 0x4ec <DIO_voidSetPinDirection+0x44>
 4b6:	83 30       	cpi	r24, 0x03	; 3
 4b8:	29 f1       	breq	.+74     	; 0x504 <DIO_voidSetPinDirection+0x5c>
 4ba:	08 95       	ret
 4bc:	2a b3       	in	r18, 0x1a	; 26
 4be:	81 e0       	ldi	r24, 0x01	; 1
 4c0:	90 e0       	ldi	r25, 0x00	; 0
 4c2:	02 c0       	rjmp	.+4      	; 0x4c8 <DIO_voidSetPinDirection+0x20>
 4c4:	88 0f       	add	r24, r24
 4c6:	99 1f       	adc	r25, r25
 4c8:	6a 95       	dec	r22
 4ca:	e2 f7       	brpl	.-8      	; 0x4c4 <DIO_voidSetPinDirection+0x1c>
 4cc:	80 95       	com	r24
 4ce:	82 23       	and	r24, r18
 4d0:	8a bb       	out	0x1a, r24	; 26
 4d2:	08 95       	ret
 4d4:	27 b3       	in	r18, 0x17	; 23
 4d6:	81 e0       	ldi	r24, 0x01	; 1
 4d8:	90 e0       	ldi	r25, 0x00	; 0
 4da:	02 c0       	rjmp	.+4      	; 0x4e0 <DIO_voidSetPinDirection+0x38>
 4dc:	88 0f       	add	r24, r24
 4de:	99 1f       	adc	r25, r25
 4e0:	6a 95       	dec	r22
 4e2:	e2 f7       	brpl	.-8      	; 0x4dc <DIO_voidSetPinDirection+0x34>
 4e4:	80 95       	com	r24
 4e6:	82 23       	and	r24, r18
 4e8:	87 bb       	out	0x17, r24	; 23
 4ea:	08 95       	ret
 4ec:	24 b3       	in	r18, 0x14	; 20
 4ee:	81 e0       	ldi	r24, 0x01	; 1
 4f0:	90 e0       	ldi	r25, 0x00	; 0
 4f2:	02 c0       	rjmp	.+4      	; 0x4f8 <DIO_voidSetPinDirection+0x50>
 4f4:	88 0f       	add	r24, r24
 4f6:	99 1f       	adc	r25, r25
 4f8:	6a 95       	dec	r22
 4fa:	e2 f7       	brpl	.-8      	; 0x4f4 <DIO_voidSetPinDirection+0x4c>
 4fc:	80 95       	com	r24
 4fe:	82 23       	and	r24, r18
 500:	84 bb       	out	0x14, r24	; 20
 502:	08 95       	ret
 504:	21 b3       	in	r18, 0x11	; 17
 506:	81 e0       	ldi	r24, 0x01	; 1
 508:	90 e0       	ldi	r25, 0x00	; 0
 50a:	02 c0       	rjmp	.+4      	; 0x510 <DIO_voidSetPinDirection+0x68>
 50c:	88 0f       	add	r24, r24
 50e:	99 1f       	adc	r25, r25
 510:	6a 95       	dec	r22
 512:	e2 f7       	brpl	.-8      	; 0x50c <DIO_voidSetPinDirection+0x64>
 514:	80 95       	com	r24
 516:	82 23       	and	r24, r18
 518:	81 bb       	out	0x11, r24	; 17
 51a:	08 95       	ret
 51c:	81 30       	cpi	r24, 0x01	; 1
 51e:	89 f0       	breq	.+34     	; 0x542 <DIO_voidSetPinDirection+0x9a>
 520:	28 f0       	brcs	.+10     	; 0x52c <DIO_voidSetPinDirection+0x84>
 522:	82 30       	cpi	r24, 0x02	; 2
 524:	c9 f0       	breq	.+50     	; 0x558 <DIO_voidSetPinDirection+0xb0>
 526:	83 30       	cpi	r24, 0x03	; 3
 528:	11 f1       	breq	.+68     	; 0x56e <DIO_voidSetPinDirection+0xc6>
 52a:	08 95       	ret
 52c:	2a b3       	in	r18, 0x1a	; 26
 52e:	81 e0       	ldi	r24, 0x01	; 1
 530:	90 e0       	ldi	r25, 0x00	; 0
 532:	02 c0       	rjmp	.+4      	; 0x538 <DIO_voidSetPinDirection+0x90>
 534:	88 0f       	add	r24, r24
 536:	99 1f       	adc	r25, r25
 538:	6a 95       	dec	r22
 53a:	e2 f7       	brpl	.-8      	; 0x534 <DIO_voidSetPinDirection+0x8c>
 53c:	82 2b       	or	r24, r18
 53e:	8a bb       	out	0x1a, r24	; 26
 540:	08 95       	ret
 542:	27 b3       	in	r18, 0x17	; 23
 544:	81 e0       	ldi	r24, 0x01	; 1
 546:	90 e0       	ldi	r25, 0x00	; 0
 548:	02 c0       	rjmp	.+4      	; 0x54e <DIO_voidSetPinDirection+0xa6>
 54a:	88 0f       	add	r24, r24
 54c:	99 1f       	adc	r25, r25
 54e:	6a 95       	dec	r22
 550:	e2 f7       	brpl	.-8      	; 0x54a <DIO_voidSetPinDirection+0xa2>
 552:	82 2b       	or	r24, r18
 554:	87 bb       	out	0x17, r24	; 23
 556:	08 95       	ret
 558:	24 b3       	in	r18, 0x14	; 20
 55a:	81 e0       	ldi	r24, 0x01	; 1
 55c:	90 e0       	ldi	r25, 0x00	; 0
 55e:	02 c0       	rjmp	.+4      	; 0x564 <DIO_voidSetPinDirection+0xbc>
 560:	88 0f       	add	r24, r24
 562:	99 1f       	adc	r25, r25
 564:	6a 95       	dec	r22
 566:	e2 f7       	brpl	.-8      	; 0x560 <DIO_voidSetPinDirection+0xb8>
 568:	82 2b       	or	r24, r18
 56a:	84 bb       	out	0x14, r24	; 20
 56c:	08 95       	ret
 56e:	21 b3       	in	r18, 0x11	; 17
 570:	81 e0       	ldi	r24, 0x01	; 1
 572:	90 e0       	ldi	r25, 0x00	; 0
 574:	02 c0       	rjmp	.+4      	; 0x57a <DIO_voidSetPinDirection+0xd2>
 576:	88 0f       	add	r24, r24
 578:	99 1f       	adc	r25, r25
 57a:	6a 95       	dec	r22
 57c:	e2 f7       	brpl	.-8      	; 0x576 <DIO_voidSetPinDirection+0xce>
 57e:	82 2b       	or	r24, r18
 580:	81 bb       	out	0x11, r24	; 17
 582:	08 95       	ret

00000584 <DIO_voidSetPinValue>:
 584:	41 30       	cpi	r20, 0x01	; 1
 586:	a1 f5       	brne	.+104    	; 0x5f0 <DIO_voidSetPinValue+0x6c>
 588:	81 30       	cpi	r24, 0x01	; 1
 58a:	89 f0       	breq	.+34     	; 0x5ae <DIO_voidSetPinValue+0x2a>
 58c:	28 f0       	brcs	.+10     	; 0x598 <DIO_voidSetPinValue+0x14>
 58e:	82 30       	cpi	r24, 0x02	; 2
 590:	c9 f0       	breq	.+50     	; 0x5c4 <DIO_voidSetPinValue+0x40>
 592:	83 30       	cpi	r24, 0x03	; 3
 594:	11 f1       	breq	.+68     	; 0x5da <DIO_voidSetPinValue+0x56>
 596:	08 95       	ret
 598:	2b b3       	in	r18, 0x1b	; 27
 59a:	81 e0       	ldi	r24, 0x01	; 1
 59c:	90 e0       	ldi	r25, 0x00	; 0
 59e:	02 c0       	rjmp	.+4      	; 0x5a4 <DIO_voidSetPinValue+0x20>
 5a0:	88 0f       	add	r24, r24
 5a2:	99 1f       	adc	r25, r25
 5a4:	6a 95       	dec	r22
 5a6:	e2 f7       	brpl	.-8      	; 0x5a0 <DIO_voidSetPinValue+0x1c>
 5a8:	82 2b       	or	r24, r18
 5aa:	8b bb       	out	0x1b, r24	; 27
 5ac:	08 95       	ret
 5ae:	28 b3       	in	r18, 0x18	; 24
 5b0:	81 e0       	ldi	r24, 0x01	; 1
 5b2:	90 e0       	ldi	r25, 0x00	; 0
 5b4:	02 c0       	rjmp	.+4      	; 0x5ba <DIO_voidSetPinValue+0x36>
 5b6:	88 0f       	add	r24, r24
 5b8:	99 1f       	adc	r25, r25
 5ba:	6a 95       	dec	r22
 5bc:	e2 f7       	brpl	.-8      	; 0x5b6 <DIO_voidSetPinValue+0x32>
 5be:	82 2b       	or	r24, r18
 5c0:	88 bb       	out	0x18, r24	; 24
 5c2:	08 95       	ret
 5c4:	25 b3       	in	r18, 0x15	; 21
 5c6:	81 e0       	ldi	r24, 0x01	; 1
 5c8:	90 e0       	ldi	r25, 0x00	; 0
 5ca:	02 c0       	rjmp	.+4      	; 0x5d0 <DIO_voidSetPinValue+0x4c>
 5cc:	88 0f       	add	r24, r24
 5ce:	99 1f       	adc	r25, r25
 5d0:	6a 95       	dec	r22
 5d2:	e2 f7       	brpl	.-8      	; 0x5cc <DIO_voidSetPinValue+0x48>
 5d4:	82 2b       	or	r24, r18
 5d6:	85 bb       	out	0x15, r24	; 21
 5d8:	08 95       	ret
 5da:	22 b3       	in	r18, 0x12	; 18
 5dc:	81 e0       	ldi	r24, 0x01	; 1
 5de:	90 e0       	ldi	r25, 0x00	; 0
 5e0:	02 c0       	rjmp	.+4      	; 0x5e6 <DIO_voidSetPinValue+0x62>
 5e2:	88 0f       	add	r24, r24
 5e4:	99 1f       	adc	r25, r25
 5e6:	6a 95       	dec	r22
 5e8:	e2 f7       	brpl	.-8      	; 0x5e2 <DIO_voidSetPinValue+0x5e>
 5ea:	82 2b       	or	r24, r18
 5ec:	82 bb       	out	0x12, r24	; 18
 5ee:	08 95       	ret
 5f0:	81 30       	cpi	r24, 0x01	; 1
 5f2:	91 f0       	breq	.+36     	; 0x618 <DIO_voidSetPinValue+0x94>
 5f4:	28 f0       	brcs	.+10     	; 0x600 <DIO_voidSetPinValue+0x7c>
 5f6:	82 30       	cpi	r24, 0x02	; 2
 5f8:	d9 f0       	breq	.+54     	; 0x630 <DIO_voidSetPinValue+0xac>
 5fa:	83 30       	cpi	r24, 0x03	; 3
 5fc:	29 f1       	breq	.+74     	; 0x648 <DIO_voidSetPinValue+0xc4>
 5fe:	08 95       	ret
 600:	2b b3       	in	r18, 0x1b	; 27
 602:	81 e0       	ldi	r24, 0x01	; 1
 604:	90 e0       	ldi	r25, 0x00	; 0
 606:	02 c0       	rjmp	.+4      	; 0x60c <DIO_voidSetPinValue+0x88>
 608:	88 0f       	add	r24, r24
 60a:	99 1f       	adc	r25, r25
 60c:	6a 95       	dec	r22
 60e:	e2 f7       	brpl	.-8      	; 0x608 <DIO_voidSetPinValue+0x84>
 610:	80 95       	com	r24
 612:	82 23       	and	r24, r18
 614:	8b bb       	out	0x1b, r24	; 27
 616:	08 95       	ret
 618:	28 b3       	in	r18, 0x18	; 24
 61a:	81 e0       	ldi	r24, 0x01	; 1
 61c:	90 e0       	ldi	r25, 0x00	; 0
 61e:	02 c0       	rjmp	.+4      	; 0x624 <DIO_voidSetPinValue+0xa0>
 620:	88 0f       	add	r24, r24
 622:	99 1f       	adc	r25, r25
 624:	6a 95       	dec	r22
 626:	e2 f7       	brpl	.-8      	; 0x620 <DIO_voidSetPinValue+0x9c>
 628:	80 95       	com	r24
 62a:	82 23       	and	r24, r18
 62c:	88 bb       	out	0x18, r24	; 24
 62e:	08 95       	ret
 630:	25 b3       	in	r18, 0x15	; 21
 632:	81 e0       	ldi	r24, 0x01	; 1
 634:	90 e0       	ldi	r25, 0x00	; 0
 636:	02 c0       	rjmp	.+4      	; 0x63c <DIO_voidSetPinValue+0xb8>
 638:	88 0f       	add	r24, r24
 63a:	99 1f       	adc	r25, r25
 63c:	6a 95       	dec	r22
 63e:	e2 f7       	brpl	.-8      	; 0x638 <DIO_voidSetPinValue+0xb4>
 640:	80 95       	com	r24
 642:	82 23       	and	r24, r18
 644:	85 bb       	out	0x15, r24	; 21
 646:	08 95       	ret
 648:	22 b3       	in	r18, 0x12	; 18
 64a:	81 e0       	ldi	r24, 0x01	; 1
 64c:	90 e0       	ldi	r25, 0x00	; 0
 64e:	02 c0       	rjmp	.+4      	; 0x654 <DIO_voidSetPinValue+0xd0>
 650:	88 0f       	add	r24, r24
 652:	99 1f       	adc	r25, r25
 654:	6a 95       	dec	r22
 656:	e2 f7       	brpl	.-8      	; 0x650 <DIO_voidSetPinValue+0xcc>
 658:	80 95       	com	r24
 65a:	82 23       	and	r24, r18
 65c:	82 bb       	out	0x12, r24	; 18
 65e:	08 95       	ret

00000660 <Timer0_vInit>:
 660:	83 b7       	in	r24, 0x33	; 51
 662:	80 64       	ori	r24, 0x40	; 64
 664:	83 bf       	out	0x33, r24	; 51
 666:	83 b7       	in	r24, 0x33	; 51
 668:	88 60       	ori	r24, 0x08	; 8
 66a:	83 bf       	out	0x33, r24	; 51
 66c:	08 95       	ret

0000066e <Timer0_vStart>:
 66e:	83 b7       	in	r24, 0x33	; 51
 670:	8e 7f       	andi	r24, 0xFE	; 254
 672:	83 bf       	out	0x33, r24	; 51
 674:	83 b7       	in	r24, 0x33	; 51
 676:	8d 7f       	andi	r24, 0xFD	; 253
 678:	83 bf       	out	0x33, r24	; 51
 67a:	83 b7       	in	r24, 0x33	; 51
 67c:	8b 7f       	andi	r24, 0xFB	; 251
 67e:	83 bf       	out	0x33, r24	; 51
 680:	83 b7       	in	r24, 0x33	; 51
 682:	81 60       	ori	r24, 0x01	; 1
 684:	83 bf       	out	0x33, r24	; 51
 686:	83 b7       	in	r24, 0x33	; 51
 688:	82 60       	ori	r24, 0x02	; 2
 68a:	83 bf       	out	0x33, r24	; 51
 68c:	83 b7       	in	r24, 0x33	; 51
 68e:	8b 7f       	andi	r24, 0xFB	; 251
 690:	83 bf       	out	0x33, r24	; 51
 692:	08 95       	ret

00000694 <Timer0_SetFastPWM>:
 694:	cf 93       	push	r28
 696:	c8 2f       	mov	r28, r24
 698:	41 e0       	ldi	r20, 0x01	; 1
 69a:	63 e0       	ldi	r22, 0x03	; 3
 69c:	81 e0       	ldi	r24, 0x01	; 1
 69e:	0e 94 54 02 	call	0x4a8	; 0x4a8 <DIO_voidSetPinDirection>
 6a2:	83 b7       	in	r24, 0x33	; 51
 6a4:	8f 7e       	andi	r24, 0xEF	; 239
 6a6:	83 bf       	out	0x33, r24	; 51
 6a8:	83 b7       	in	r24, 0x33	; 51
 6aa:	80 62       	ori	r24, 0x20	; 32
 6ac:	83 bf       	out	0x33, r24	; 51
 6ae:	9c 2f       	mov	r25, r28
 6b0:	80 e0       	ldi	r24, 0x00	; 0
 6b2:	64 e6       	ldi	r22, 0x64	; 100
 6b4:	70 e0       	ldi	r23, 0x00	; 0
 6b6:	0e 94 03 04 	call	0x806	; 0x806 <__divmodhi4>
 6ba:	61 50       	subi	r22, 0x01	; 1
 6bc:	71 09       	sbc	r23, r1
 6be:	cb 01       	movw	r24, r22
 6c0:	99 23       	and	r25, r25
 6c2:	24 f4       	brge	.+8      	; 0x6cc <Timer0_SetFastPWM+0x38>
 6c4:	88 27       	eor	r24, r24
 6c6:	99 27       	eor	r25, r25
 6c8:	86 1b       	sub	r24, r22
 6ca:	97 0b       	sbc	r25, r23
 6cc:	8c bf       	out	0x3c, r24	; 60
 6ce:	cf 91       	pop	r28
 6d0:	08 95       	ret

000006d2 <Timer2_vInit>:
 6d2:	85 b5       	in	r24, 0x25	; 37
 6d4:	8f 7b       	andi	r24, 0xBF	; 191
 6d6:	85 bd       	out	0x25, r24	; 37
 6d8:	85 b5       	in	r24, 0x25	; 37
 6da:	88 60       	ori	r24, 0x08	; 8
 6dc:	85 bd       	out	0x25, r24	; 37
 6de:	08 95       	ret

000006e0 <Timer2_vEnableInt>:
 6e0:	88 23       	and	r24, r24
 6e2:	19 f0       	breq	.+6      	; 0x6ea <Timer2_vEnableInt+0xa>
 6e4:	81 30       	cpi	r24, 0x01	; 1
 6e6:	31 f0       	breq	.+12     	; 0x6f4 <Timer2_vEnableInt+0x14>
 6e8:	08 95       	ret
 6ea:	89 b7       	in	r24, 0x39	; 57
 6ec:	80 64       	ori	r24, 0x40	; 64
 6ee:	89 bf       	out	0x39, r24	; 57
 6f0:	78 94       	sei
 6f2:	08 95       	ret
 6f4:	89 b7       	in	r24, 0x39	; 57
 6f6:	80 68       	ori	r24, 0x80	; 128
 6f8:	89 bf       	out	0x39, r24	; 57
 6fa:	78 94       	sei
 6fc:	08 95       	ret

000006fe <Timer2_vStart>:
 6fe:	85 b5       	in	r24, 0x25	; 37
 700:	8e 7f       	andi	r24, 0xFE	; 254
 702:	85 bd       	out	0x25, r24	; 37
 704:	85 b5       	in	r24, 0x25	; 37
 706:	8d 7f       	andi	r24, 0xFD	; 253
 708:	85 bd       	out	0x25, r24	; 37
 70a:	85 b5       	in	r24, 0x25	; 37
 70c:	8b 7f       	andi	r24, 0xFB	; 251
 70e:	85 bd       	out	0x25, r24	; 37
 710:	85 b5       	in	r24, 0x25	; 37
 712:	8e 7f       	andi	r24, 0xFE	; 254
 714:	85 bd       	out	0x25, r24	; 37
 716:	85 b5       	in	r24, 0x25	; 37
 718:	8d 7f       	andi	r24, 0xFD	; 253
 71a:	85 bd       	out	0x25, r24	; 37
 71c:	85 b5       	in	r24, 0x25	; 37
 71e:	84 60       	ori	r24, 0x04	; 4
 720:	85 bd       	out	0x25, r24	; 37
 722:	08 95       	ret

00000724 <Timer2_vSetTime>:
 724:	8f 92       	push	r8
 726:	9f 92       	push	r9
 728:	af 92       	push	r10
 72a:	bf 92       	push	r11
 72c:	cf 92       	push	r12
 72e:	df 92       	push	r13
 730:	ef 92       	push	r14
 732:	ff 92       	push	r15
 734:	9b 01       	movw	r18, r22
 736:	ac 01       	movw	r20, r24
 738:	a0 e4       	ldi	r26, 0x40	; 64
 73a:	bf e1       	ldi	r27, 0x1F	; 31
 73c:	0e 94 39 04 	call	0x872	; 0x872 <__muluhisi3>
 740:	4b 01       	movw	r8, r22
 742:	5c 01       	movw	r10, r24
 744:	68 94       	set
 746:	15 f8       	bld	r1, 5
 748:	b6 94       	lsr	r11
 74a:	a7 94       	ror	r10
 74c:	97 94       	ror	r9
 74e:	87 94       	ror	r8
 750:	16 94       	lsr	r1
 752:	d1 f7       	brne	.-12     	; 0x748 <Timer2_vSetTime+0x24>
 754:	c1 2c       	mov	r12, r1
 756:	d1 2c       	mov	r13, r1
 758:	76 01       	movw	r14, r12
 75a:	ca 94       	dec	r12
 75c:	0f c0       	rjmp	.+30     	; 0x77c <Timer2_vSetTime+0x58>
 75e:	c5 01       	movw	r24, r10
 760:	b4 01       	movw	r22, r8
 762:	a7 01       	movw	r20, r14
 764:	96 01       	movw	r18, r12
 766:	0e 94 17 04 	call	0x82e	; 0x82e <__udivmodsi4>
 76a:	67 2b       	or	r22, r23
 76c:	68 2b       	or	r22, r24
 76e:	69 2b       	or	r22, r25
 770:	59 f0       	breq	.+22     	; 0x788 <Timer2_vSetTime+0x64>
 772:	81 e0       	ldi	r24, 0x01	; 1
 774:	c8 1a       	sub	r12, r24
 776:	d1 08       	sbc	r13, r1
 778:	e1 08       	sbc	r14, r1
 77a:	f1 08       	sbc	r15, r1
 77c:	82 e0       	ldi	r24, 0x02	; 2
 77e:	c8 16       	cp	r12, r24
 780:	d1 04       	cpc	r13, r1
 782:	e1 04       	cpc	r14, r1
 784:	f1 04       	cpc	r15, r1
 786:	58 f7       	brcc	.-42     	; 0x75e <Timer2_vSetTime+0x3a>
 788:	c3 bc       	out	0x23, r12	; 35
 78a:	c5 01       	movw	r24, r10
 78c:	b4 01       	movw	r22, r8
 78e:	a7 01       	movw	r20, r14
 790:	96 01       	movw	r18, r12
 792:	0e 94 17 04 	call	0x82e	; 0x82e <__udivmodsi4>
 796:	20 93 69 00 	sts	0x0069, r18	; 0x800069 <Timer2_NumOfCM>
 79a:	30 93 6a 00 	sts	0x006A, r19	; 0x80006a <Timer2_NumOfCM+0x1>
 79e:	40 93 6b 00 	sts	0x006B, r20	; 0x80006b <Timer2_NumOfCM+0x2>
 7a2:	50 93 6c 00 	sts	0x006C, r21	; 0x80006c <Timer2_NumOfCM+0x3>
 7a6:	ff 90       	pop	r15
 7a8:	ef 90       	pop	r14
 7aa:	df 90       	pop	r13
 7ac:	cf 90       	pop	r12
 7ae:	bf 90       	pop	r11
 7b0:	af 90       	pop	r10
 7b2:	9f 90       	pop	r9
 7b4:	8f 90       	pop	r8
 7b6:	08 95       	ret

000007b8 <UART_init>:
 7b8:	8b b1       	in	r24, 0x0b	; 11
 7ba:	82 60       	ori	r24, 0x02	; 2
 7bc:	8b b9       	out	0x0b, r24	; 11
 7be:	8a b1       	in	r24, 0x0a	; 10
 7c0:	80 61       	ori	r24, 0x10	; 16
 7c2:	8a b9       	out	0x0a, r24	; 10
 7c4:	8a b1       	in	r24, 0x0a	; 10
 7c6:	88 60       	ori	r24, 0x08	; 8
 7c8:	8a b9       	out	0x0a, r24	; 10
 7ca:	80 b5       	in	r24, 0x20	; 32
 7cc:	80 68       	ori	r24, 0x80	; 128
 7ce:	80 bd       	out	0x20, r24	; 32
 7d0:	80 b5       	in	r24, 0x20	; 32
 7d2:	82 60       	ori	r24, 0x02	; 2
 7d4:	80 bd       	out	0x20, r24	; 32
 7d6:	80 b5       	in	r24, 0x20	; 32
 7d8:	84 60       	ori	r24, 0x04	; 4
 7da:	80 bd       	out	0x20, r24	; 32
 7dc:	10 bc       	out	0x20, r1	; 32
 7de:	86 e6       	ldi	r24, 0x66	; 102
 7e0:	89 b9       	out	0x09, r24	; 9
 7e2:	08 95       	ret

000007e4 <UART_sendByte>:
 7e4:	9b b1       	in	r25, 0x0b	; 11
 7e6:	92 95       	swap	r25
 7e8:	96 95       	lsr	r25
 7ea:	97 70       	andi	r25, 0x07	; 7
 7ec:	d9 f3       	breq	.-10     	; 0x7e4 <UART_sendByte>
	#else
		//round up by default
		__ticks_dc = (uint32_t)(ceil(fabs(__tmp)));
	#endif

	__builtin_avr_delay_cycles(__ticks_dc);
 7ee:	e7 ec       	ldi	r30, 0xC7	; 199
 7f0:	f0 e0       	ldi	r31, 0x00	; 0
 7f2:	31 97       	sbiw	r30, 0x01	; 1
 7f4:	f1 f7       	brne	.-4      	; 0x7f2 <UART_sendByte+0xe>
 7f6:	00 c0       	rjmp	.+0      	; 0x7f8 <UART_sendByte+0x14>
 7f8:	00 00       	nop
 7fa:	8c b9       	out	0x0c, r24	; 12
 7fc:	08 95       	ret

000007fe <UART_receiveByte>:
 7fe:	5f 9b       	sbis	0x0b, 7	; 11
 800:	fe cf       	rjmp	.-4      	; 0x7fe <UART_receiveByte>
 802:	8c b1       	in	r24, 0x0c	; 12
 804:	08 95       	ret

00000806 <__divmodhi4>:
 806:	97 fb       	bst	r25, 7
 808:	07 2e       	mov	r0, r23
 80a:	16 f4       	brtc	.+4      	; 0x810 <__divmodhi4+0xa>
 80c:	00 94       	com	r0
 80e:	07 d0       	rcall	.+14     	; 0x81e <__divmodhi4_neg1>
 810:	77 fd       	sbrc	r23, 7
 812:	09 d0       	rcall	.+18     	; 0x826 <__divmodhi4_neg2>
 814:	0e 94 44 04 	call	0x888	; 0x888 <__udivmodhi4>
 818:	07 fc       	sbrc	r0, 7
 81a:	05 d0       	rcall	.+10     	; 0x826 <__divmodhi4_neg2>
 81c:	3e f4       	brtc	.+14     	; 0x82c <__divmodhi4_exit>

0000081e <__divmodhi4_neg1>:
 81e:	90 95       	com	r25
 820:	81 95       	neg	r24
 822:	9f 4f       	sbci	r25, 0xFF	; 255
 824:	08 95       	ret

00000826 <__divmodhi4_neg2>:
 826:	70 95       	com	r23
 828:	61 95       	neg	r22
 82a:	7f 4f       	sbci	r23, 0xFF	; 255

0000082c <__divmodhi4_exit>:
 82c:	08 95       	ret

0000082e <__udivmodsi4>:
 82e:	a1 e2       	ldi	r26, 0x21	; 33
 830:	1a 2e       	mov	r1, r26
 832:	aa 1b       	sub	r26, r26
 834:	bb 1b       	sub	r27, r27
 836:	fd 01       	movw	r30, r26
 838:	0d c0       	rjmp	.+26     	; 0x854 <__udivmodsi4_ep>

0000083a <__udivmodsi4_loop>:
 83a:	aa 1f       	adc	r26, r26
 83c:	bb 1f       	adc	r27, r27
 83e:	ee 1f       	adc	r30, r30
 840:	ff 1f       	adc	r31, r31
 842:	a2 17       	cp	r26, r18
 844:	b3 07       	cpc	r27, r19
 846:	e4 07       	cpc	r30, r20
 848:	f5 07       	cpc	r31, r21
 84a:	20 f0       	brcs	.+8      	; 0x854 <__udivmodsi4_ep>
 84c:	a2 1b       	sub	r26, r18
 84e:	b3 0b       	sbc	r27, r19
 850:	e4 0b       	sbc	r30, r20
 852:	f5 0b       	sbc	r31, r21

00000854 <__udivmodsi4_ep>:
 854:	66 1f       	adc	r22, r22
 856:	77 1f       	adc	r23, r23
 858:	88 1f       	adc	r24, r24
 85a:	99 1f       	adc	r25, r25
 85c:	1a 94       	dec	r1
 85e:	69 f7       	brne	.-38     	; 0x83a <__udivmodsi4_loop>
 860:	60 95       	com	r22
 862:	70 95       	com	r23
 864:	80 95       	com	r24
 866:	90 95       	com	r25
 868:	9b 01       	movw	r18, r22
 86a:	ac 01       	movw	r20, r24
 86c:	bd 01       	movw	r22, r26
 86e:	cf 01       	movw	r24, r30
 870:	08 95       	ret

00000872 <__muluhisi3>:
 872:	0e 94 58 04 	call	0x8b0	; 0x8b0 <__umulhisi3>
 876:	a5 9f       	mul	r26, r21
 878:	90 0d       	add	r25, r0
 87a:	b4 9f       	mul	r27, r20
 87c:	90 0d       	add	r25, r0
 87e:	a4 9f       	mul	r26, r20
 880:	80 0d       	add	r24, r0
 882:	91 1d       	adc	r25, r1
 884:	11 24       	eor	r1, r1
 886:	08 95       	ret

00000888 <__udivmodhi4>:
 888:	aa 1b       	sub	r26, r26
 88a:	bb 1b       	sub	r27, r27
 88c:	51 e1       	ldi	r21, 0x11	; 17
 88e:	07 c0       	rjmp	.+14     	; 0x89e <__udivmodhi4_ep>

00000890 <__udivmodhi4_loop>:
 890:	aa 1f       	adc	r26, r26
 892:	bb 1f       	adc	r27, r27
 894:	a6 17       	cp	r26, r22
 896:	b7 07       	cpc	r27, r23
 898:	10 f0       	brcs	.+4      	; 0x89e <__udivmodhi4_ep>
 89a:	a6 1b       	sub	r26, r22
 89c:	b7 0b       	sbc	r27, r23

0000089e <__udivmodhi4_ep>:
 89e:	88 1f       	adc	r24, r24
 8a0:	99 1f       	adc	r25, r25
 8a2:	5a 95       	dec	r21
 8a4:	a9 f7       	brne	.-22     	; 0x890 <__udivmodhi4_loop>
 8a6:	80 95       	com	r24
 8a8:	90 95       	com	r25
 8aa:	bc 01       	movw	r22, r24
 8ac:	cd 01       	movw	r24, r26
 8ae:	08 95       	ret

000008b0 <__umulhisi3>:
 8b0:	a2 9f       	mul	r26, r18
 8b2:	b0 01       	movw	r22, r0
 8b4:	b3 9f       	mul	r27, r19
 8b6:	c0 01       	movw	r24, r0
 8b8:	a3 9f       	mul	r26, r19
 8ba:	70 0d       	add	r23, r0
 8bc:	81 1d       	adc	r24, r1
 8be:	11 24       	eor	r1, r1
 8c0:	91 1d       	adc	r25, r1
 8c2:	b2 9f       	mul	r27, r18
 8c4:	70 0d       	add	r23, r0
 8c6:	81 1d       	adc	r24, r1
 8c8:	11 24       	eor	r1, r1
 8ca:	91 1d       	adc	r25, r1
 8cc:	08 95       	ret

000008ce <_exit>:
 8ce:	f8 94       	cli

000008d0 <__stop_program>:
 8d0:	ff cf       	rjmp	.-2      	; 0x8d0 <__stop_program>
